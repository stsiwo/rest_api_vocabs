"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("../../env");

var _sequelizeTypescript = require("sequelize-typescript");

/**
 * since process.env.xxx return string or undefined (union type)
 * so need type gaurd like "as string" or "<string>"
 **/
var dbName = process.env.DB_NAME_DEV;
var dbUserName = process.env.DB_USER;
var dbPassword = process.env.DB_PASSWORD;
var sequelize = new _sequelizeTypescript.Sequelize({
  database: dbName,
  dialect: 'postgres',
  username: dbUserName,
  password: dbPassword,
  modelPaths: [__dirname + '/DataEntities'],

  /**
   * this is to disable following warning:
   * sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operato
  rs node_modules\sequelize\lib\sequelize.js:242:13
   **/
  operatorsAliases: false
});
var _default = sequelize;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9GcmFtZXdvcmsvSW5mcmFzdHJ1Y3R1cmUvY29ubmVjdGlvbi50cyJdLCJuYW1lcyI6WyJkYk5hbWUiLCJwcm9jZXNzIiwiZW52IiwiREJfTkFNRV9ERVYiLCJkYlVzZXJOYW1lIiwiREJfVVNFUiIsImRiUGFzc3dvcmQiLCJEQl9QQVNTV09SRCIsInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImRhdGFiYXNlIiwiZGlhbGVjdCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJtb2RlbFBhdGhzIiwiX19kaXJuYW1lIiwib3BlcmF0b3JzQWxpYXNlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBOzs7O0FBSUEsSUFBTUEsTUFBYyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsV0FBbkM7QUFDQSxJQUFNQyxVQUFrQixHQUFHSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsT0FBdkM7QUFDQSxJQUFNQyxVQUFrQixHQUFHTCxPQUFPLENBQUNDLEdBQVIsQ0FBWUssV0FBdkM7QUFFQSxJQUFNQyxTQUFTLEdBQUksSUFBSUMsOEJBQUosQ0FBYztBQUMvQkMsRUFBQUEsUUFBUSxFQUFFVixNQURxQjtBQUUvQlcsRUFBQUEsT0FBTyxFQUFFLFVBRnNCO0FBRy9CQyxFQUFBQSxRQUFRLEVBQUVSLFVBSHFCO0FBSS9CUyxFQUFBQSxRQUFRLEVBQUVQLFVBSnFCO0FBSy9CUSxFQUFBQSxVQUFVLEVBQUUsQ0FDVkMsU0FBUyxHQUFHLGVBREYsQ0FMbUI7O0FBUS9COzs7OztBQUtBQyxFQUFBQSxnQkFBZ0IsRUFBRTtBQWJhLENBQWQsQ0FBbkI7ZUFnQmVSLFMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuLi8uLi9lbnZcIjtcbmltcG9ydCB7IFNlcXVlbGl6ZSB9IGZyb20gJ3NlcXVlbGl6ZS10eXBlc2NyaXB0JztcblxuLyoqXG4gKiBzaW5jZSBwcm9jZXNzLmVudi54eHggcmV0dXJuIHN0cmluZyBvciB1bmRlZmluZWQgKHVuaW9uIHR5cGUpXG4gKiBzbyBuZWVkIHR5cGUgZ2F1cmQgbGlrZSBcImFzIHN0cmluZ1wiIG9yIFwiPHN0cmluZz5cIlxuICoqL1xuY29uc3QgZGJOYW1lOiBzdHJpbmcgPSBwcm9jZXNzLmVudi5EQl9OQU1FX0RFViBhcyBzdHJpbmc7XG5jb25zdCBkYlVzZXJOYW1lOiBzdHJpbmcgPSBwcm9jZXNzLmVudi5EQl9VU0VSIGFzIHN0cmluZztcbmNvbnN0IGRiUGFzc3dvcmQ6IHN0cmluZyA9IHByb2Nlc3MuZW52LkRCX1BBU1NXT1JEIGFzIHN0cmluZztcblxuY29uc3Qgc2VxdWVsaXplID0gIG5ldyBTZXF1ZWxpemUoe1xuICBkYXRhYmFzZTogZGJOYW1lLCBcbiAgZGlhbGVjdDogJ3Bvc3RncmVzJyxcbiAgdXNlcm5hbWU6IGRiVXNlck5hbWUsXG4gIHBhc3N3b3JkOiBkYlBhc3N3b3JkLCBcbiAgbW9kZWxQYXRoczogW1xuICAgIF9fZGlybmFtZSArICcvRGF0YUVudGl0aWVzJ1xuICBdLFxuICAvKipcbiAgICogdGhpcyBpcyB0byBkaXNhYmxlIGZvbGxvd2luZyB3YXJuaW5nOlxuICAgKiBzZXF1ZWxpemUgZGVwcmVjYXRlZCBTdHJpbmcgYmFzZWQgb3BlcmF0b3JzIGFyZSBub3cgZGVwcmVjYXRlZC4gUGxlYXNlIHVzZSBTeW1ib2wgYmFzZWQgb3BlcmF0b3JzIGZvciBiZXR0ZXIgc2VjdXJpdHksIHJlYWQgbW9yZSBhdCBodHRwOi8vZG9jcy5zZXF1ZWxpemVqcy5jb20vbWFudWFsL3R1dG9yaWFsL3F1ZXJ5aW5nLmh0bWwjb3BlcmF0b1xucnMgbm9kZV9tb2R1bGVzXFxzZXF1ZWxpemVcXGxpYlxcc2VxdWVsaXplLmpzOjI0MjoxM1xuICAgKiovXG4gIG9wZXJhdG9yc0FsaWFzZXM6IGZhbHNlXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgc2VxdWVsaXplO1xuIl19